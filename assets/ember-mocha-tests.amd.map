{"version":3,"sources":["chai.js","chai.jshint.js","ember-mocha.js","ember-mocha.jshint.js","ember-mocha/describe-component.js","ember-mocha/describe-component.jshint.js","ember-mocha/describe-model.js","ember-mocha/describe-model.jshint.js","ember-mocha/describe-module.js","ember-mocha/describe-module.jshint.js","ember-mocha/it.js","ember-mocha/it.jshint.js","ember-mocha/mocha-module.js","ember-mocha/mocha-module.jshint.js","ember-test-helpers.js","ember-test-helpers/isolated-container.js","ember-test-helpers/test-context.js","ember-test-helpers/test-module-for-component.js","ember-test-helpers/test-module-for-integration.js","ember-test-helpers/test-module-for-model.js","ember-test-helpers/test-module.js","ember-test-helpers/test-resolver.js","klassy.js","mocha.js","mocha.jshint.js","tests/describe-component-test.js","tests/describe-component-test.jshint.js","tests/describe-model-test.js","tests/describe-model-test.jshint.js","tests/describe-module-test.js","tests/describe-module-test.jshint.js","tests/it-test.js","tests/it-test.jshint.js","tests/mocha-module-test.js","tests/mocha-module-test.jshint.js","tests/shims-test.js","tests/shims-test.jshint.js","tests/test-support/mocha-support.js","tests/test-support/mocha-support.jshint.js","tests/test-support/resolver.js","tests/test-support/resolver.jshint.js","tests/test-support/test-loader.js","tests/test-support/test-loader.jshint.js"],"sourcesContent":["define('chai', ['exports'], function (exports) {\n\n\t'use strict';\n\n\t/* globals chai */\n\n\tvar expect = chai.expect;\n\tvar assert = chai.assert;\n\n\tvar use = chai.use;\n\tvar Assertion = chai.Assertion;\n\n\texports.expect = expect;\n\texports.assert = assert;\n\texports.use = use;\n\texports.Assertion = Assertion;\n\n});","define('chai.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('chai.js should pass jshint', function() { \n    ok(true, 'chai.js should pass jshint.'); \n  });\n\n});","define('ember-mocha', ['exports', 'ember-mocha/describe-module', 'ember-mocha/describe-component', 'ember-mocha/describe-model', 'ember-mocha/it', 'ember-test-helpers'], function (exports, describeModule, describeComponent, describeModel, it, ember_test_helpers) {\n\n  'use strict';\n\n  Object.defineProperty(exports, 'describeModule', { enumerable: true, get: function () { return describeModule['default']; }});\n  Object.defineProperty(exports, 'describeComponent', { enumerable: true, get: function () { return describeComponent['default']; }});\n  Object.defineProperty(exports, 'describeModel', { enumerable: true, get: function () { return describeModel['default']; }});\n  Object.defineProperty(exports, 'it', { enumerable: true, get: function () { return it['default']; }});\n  Object.defineProperty(exports, 'setResolver', { enumerable: true, get: function () { return ember_test_helpers.setResolver; }});\n\n});","define('ember-mocha.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('ember-mocha.js should pass jshint', function() { \n    ok(true, 'ember-mocha.js should pass jshint.'); \n  });\n\n});","define('ember-mocha/describe-component', ['exports', 'ember-mocha/mocha-module', 'ember-test-helpers'], function (exports, mocha_module, ember_test_helpers) {\n\n  'use strict';\n\n  function describeComponent(name, description, callbacks, tests) {\n    mocha_module.createModule(ember_test_helpers.TestModuleForComponent, name, description, callbacks, tests);\n  }\n\n  describeComponent.only = mocha_module.createOnly(ember_test_helpers.TestModuleForComponent);\n\n  describeComponent.skip = mocha_module.createSkip(ember_test_helpers.TestModuleForComponent);\n\n  exports['default'] = describeComponent;\n\n});","define('ember-mocha/describe-component.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - ember-mocha');\n  test('ember-mocha/describe-component.js should pass jshint', function() { \n    ok(true, 'ember-mocha/describe-component.js should pass jshint.'); \n  });\n\n});","define('ember-mocha/describe-model', ['exports', 'ember-mocha/mocha-module', 'ember-test-helpers'], function (exports, mocha_module, ember_test_helpers) {\n\n  'use strict';\n\n  function describeModel(name, description, callbacks, tests) {\n    mocha_module.createModule(ember_test_helpers.TestModuleForModel, name, description, callbacks, tests);\n  }\n\n  describeModel.only = mocha_module.createOnly(ember_test_helpers.TestModuleForModel);\n\n  describeModel.skip = mocha_module.createSkip(ember_test_helpers.TestModuleForModel);\n\n  exports['default'] = describeModel;\n\n});","define('ember-mocha/describe-model.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - ember-mocha');\n  test('ember-mocha/describe-model.js should pass jshint', function() { \n    ok(true, 'ember-mocha/describe-model.js should pass jshint.'); \n  });\n\n});","define('ember-mocha/describe-module', ['exports', 'ember-mocha/mocha-module', 'ember-test-helpers'], function (exports, mocha_module, ember_test_helpers) {\n\n  'use strict';\n\n  function describeModule(name, description, callbacks, tests) {\n    mocha_module.createModule(ember_test_helpers.TestModule, name, description, callbacks, tests);\n  }\n\n  describeModule.only = mocha_module.createOnly(ember_test_helpers.TestModule);\n\n  describeModule.skip = mocha_module.createSkip(ember_test_helpers.TestModule);\n\n  exports['default'] = describeModule;\n\n});","define('ember-mocha/describe-module.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - ember-mocha');\n  test('ember-mocha/describe-module.js should pass jshint', function() { \n    ok(true, 'ember-mocha/describe-module.js should pass jshint.'); \n  });\n\n});","define('ember-mocha/it', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  function resetViews() {\n    Ember['default'].View.views = {};\n  }\n\n  var originalIt = window.it;\n\n  function wrap(specifier) {\n    return function (testName, callback) {\n      var wrapper;\n\n      if (!callback) {\n        wrapper = null;\n      } else if (callback.length === 1) {\n        wrapper = function(done) {\n          resetViews();\n          return callback.call(this, done);\n        };\n      } else {\n        wrapper = function() {\n          resetViews();\n          return callback.call(this);\n        };\n      }\n\n      if (wrapper) {\n        wrapper.toString = function() {\n          return callback.toString();\n        };\n      }\n\n      return specifier(testName, wrapper);\n    };\n  }\n\n  var wrappedIt = wrap(window.it);\n  wrappedIt.only = wrap(window.it.only);\n  wrappedIt.skip = function(testName, callback) {\n    originalIt(testName);\n  };\n\n  exports['default'] = wrappedIt;\n\n});","define('ember-mocha/it.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - ember-mocha');\n  test('ember-mocha/it.js should pass jshint', function() { \n    ok(true, 'ember-mocha/it.js should pass jshint.'); \n  });\n\n});","define('ember-mocha/mocha-module', ['exports', 'mocha', 'ember', 'ember-test-helpers'], function (exports, mocha, Ember, ember_test_helpers) {\n\n  'use strict';\n\n  exports.createModule = createModule;\n  exports.createOnly = createOnly;\n  exports.createSkip = createSkip;\n\n  function createModule(Constructor, name, description, callbacks, tests, method) {\n    var module;\n\n    if (!tests) {\n      if (!callbacks) {\n        tests = description;\n        callbacks = {};\n      } else {\n        tests = callbacks;\n        callbacks = description;\n      }\n      module = new Constructor(name, callbacks);\n\n    } else {\n      module = new Constructor(name, description, callbacks);\n    }\n\n\n    function moduleBody() {\n      mocha.beforeEach(function() {\n        var self = this;\n        return module.setup().then(function() {\n          var context = ember_test_helpers.getContext();\n          var keys = Ember['default'].keys(context);\n          for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            self[key] = context[key];\n          }\n        });\n      });\n\n      mocha.afterEach(function() {\n        return module.teardown();\n      });\n\n      tests = tests || function() {};\n      tests();\n    }\n    if (method) {\n      mocha.describe[method](module.name, moduleBody);\n    } else {\n      mocha.describe(module.name, moduleBody);\n    }\n  }\n\n  function createOnly(Constructor) {\n    return function(name, description, callbacks, tests) {\n      createModule(Constructor, name, description, callbacks, tests, \"only\");\n    };\n  }\n\n  function createSkip(Constructor) {\n    return function(name, description, callbacks, tests) {\n      createModule(Constructor, name, description, callbacks, tests, \"skip\");\n    };\n  }\n\n});","define('ember-mocha/mocha-module.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - ember-mocha');\n  test('ember-mocha/mocha-module.js should pass jshint', function() { \n    ok(true, 'ember-mocha/mocha-module.js should pass jshint.'); \n  });\n\n});","define('ember-test-helpers', ['exports', 'ember', 'ember-test-helpers/isolated-container', 'ember-test-helpers/test-module', 'ember-test-helpers/test-module-for-component', 'ember-test-helpers/test-module-for-model', 'ember-test-helpers/test-module-for-integration', 'ember-test-helpers/test-context', 'ember-test-helpers/test-resolver'], function (exports, Ember, isolatedContainer, TestModule, TestModuleForComponent, TestModuleForModel, TestModuleForIntegration, test_context, test_resolver) {\n\n  'use strict';\n\n  Object.defineProperty(exports, 'isolatedContainer', { enumerable: true, get: function () { return isolatedContainer['default']; }});\n  Object.defineProperty(exports, 'TestModule', { enumerable: true, get: function () { return TestModule['default']; }});\n  Object.defineProperty(exports, 'TestModuleForComponent', { enumerable: true, get: function () { return TestModuleForComponent['default']; }});\n  Object.defineProperty(exports, 'TestModuleForModel', { enumerable: true, get: function () { return TestModuleForModel['default']; }});\n  Object.defineProperty(exports, 'TestModuleForIntegration', { enumerable: true, get: function () { return TestModuleForIntegration['default']; }});\n  Object.defineProperty(exports, 'getContext', { enumerable: true, get: function () { return test_context.getContext; }});\n  Object.defineProperty(exports, 'setContext', { enumerable: true, get: function () { return test_context.setContext; }});\n  Object.defineProperty(exports, 'setResolver', { enumerable: true, get: function () { return test_resolver.setResolver; }});\n\n  Ember['default'].testing = true;\n\n});","define('ember-test-helpers/isolated-container', ['exports', 'ember-test-helpers/test-resolver', 'ember'], function (exports, test_resolver, Ember) {\n\n  'use strict';\n\n  function exposeRegistryMethodsWithoutDeprecations(container) {\n    var methods = [\n      'register',\n      'unregister',\n      'resolve',\n      'normalize',\n      'typeInjection',\n      'injection',\n      'factoryInjection',\n      'factoryTypeInjection',\n      'has',\n      'options',\n      'optionsForType'\n    ];\n\n    function exposeRegistryMethod(container, method) {\n      container[method] = function() {\n        return container._registry[method].apply(container._registry, arguments);\n      };\n    }\n\n    for (var i = 0, l = methods.length; i < l; i++) {\n      exposeRegistryMethod(container, methods[i]);\n    }\n  }\n\n  function isolatedContainer(fullNames) {\n    var resolver = test_resolver.getResolver();\n    var container;\n\n    var normalize = function(fullName) {\n      return resolver.normalize(fullName);\n    };\n\n    if (Ember['default'].Registry) {\n      var registry = new Ember['default'].Registry();\n      registry.normalizeFullName = normalize;\n\n      container = registry.container();\n      exposeRegistryMethodsWithoutDeprecations(container);\n\n    } else {\n      container = new Ember['default'].Container();\n\n      //normalizeFullName only exists since Ember 1.9\n      if (Ember['default'].typeOf(container.normalizeFullName) === 'function') {\n        container.normalizeFullName = normalize;\n      } else {\n        container.normalize = normalize;\n      }\n    }\n\n    container.optionsForType('component', { singleton: false });\n    container.optionsForType('view', { singleton: false });\n    container.optionsForType('template', { instantiate: false });\n    container.optionsForType('helper', { instantiate: false });\n    container.register('component-lookup:main', Ember['default'].ComponentLookup);\n    container.register('controller:basic', Ember['default'].Controller, { instantiate: false });\n    container.register('controller:object', Ember['default'].ObjectController, { instantiate: false });\n    container.register('controller:array', Ember['default'].ArrayController, { instantiate: false });\n    container.register('view:default', Ember['default']._MetamorphView);\n    container.register('view:toplevel', Ember['default'].View.extend());\n    container.register('view:select', Ember['default'].Select);\n    container.register('route:basic', Ember['default'].Route, { instantiate: false });\n\n    for (var i = fullNames.length; i > 0; i--) {\n      var fullName = fullNames[i - 1];\n      var normalizedFullName = resolver.normalize(fullName);\n      container.register(fullName, resolver.resolve(normalizedFullName));\n    }\n    return container;\n  }\n  exports['default'] = isolatedContainer;\n\n});","define('ember-test-helpers/test-context', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.setContext = setContext;\n  exports.getContext = getContext;\n\n  var __test_context__;\n\n  function setContext(context) {\n    __test_context__ = context;\n  }\n\n  function getContext() {\n    return __test_context__;\n  }\n\n});","define('ember-test-helpers/test-module-for-component', ['exports', 'ember-test-helpers/test-module', 'ember', 'ember-test-helpers/test-resolver'], function (exports, TestModule, Ember, test_resolver) {\n\n  'use strict';\n\n  exports['default'] = TestModule['default'].extend({\n    init: function(componentName, description, callbacks) {\n      this.componentName = componentName;\n\n      this._super.call(this, 'component:' + componentName, description, callbacks);\n\n      this.setupSteps.push(this.setupComponent);\n    },\n\n    setupComponent: function() {\n      var _this = this;\n      var resolver = test_resolver.getResolver();\n      var container = this.container;\n      var context = this.context;\n\n      var layoutName = 'template:components/' + this.componentName;\n\n      var layout = resolver.resolve(layoutName);\n\n      if (layout) {\n        container.register(layoutName, layout);\n        container.injection(this.subjectName, 'layout', layoutName);\n      }\n\n      context.dispatcher = Ember['default'].EventDispatcher.create();\n      context.dispatcher.setup({}, '#ember-testing');\n\n      this.callbacks.render = function() {\n        var containerView = Ember['default'].ContainerView.create({container: container});\n        Ember['default'].run(function(){\n          var subject = context.subject();\n          containerView.pushObject(subject);\n          containerView.appendTo('#ember-testing');\n        });\n\n        _this.teardownSteps.unshift(function() {\n          Ember['default'].run(function() {\n            Ember['default'].tryInvoke(containerView, 'destroy');\n          });\n        });\n      };\n\n      this.callbacks.append = function() {\n        Ember['default'].deprecate('this.append() is deprecated. Please use this.render() or this.$() instead.');\n        return context.$();\n      };\n\n      context.$ = function() {\n        this.render();\n        var subject = this.subject();\n\n        return subject.$.apply(subject, arguments);\n      };\n    }\n  });\n\n});","define('ember-test-helpers/test-module-for-integration', ['exports', 'ember', 'ember-test-helpers/test-module', 'ember-test-helpers/test-resolver', 'ember-test-helpers/test-context'], function (exports, Ember, TestModule, test_resolver, test_context) {\n\n  'use strict';\n\n  exports['default'] = TestModule['default'].extend({\n\n    isIntegration: true,\n\n    init: function(name, description, callbacks) {\n      this._super.call(this, name, description, callbacks);\n      this.setupSteps.push(this.setupIntegrationHelpers);\n      this.teardownSteps.push(this.teardownView);\n    },\n\n    setupIntegrationHelpers: function() {\n      var self = this;\n      var context = this.context;\n      context.dispatcher = Ember['default'].EventDispatcher.create();\n      context.dispatcher.setup({}, '#ember-testing');\n      this.actionHooks = {};\n\n      context.render = function(template) {\n        if (Ember['default'].isArray(template)) {\n          template = template.join('');\n        }\n        if (typeof template === 'string') {\n          template = Ember['default'].Handlebars.compile(template);\n        }\n        self.view = Ember['default'].View.create({\n          context: context,\n          controller: self,\n          template: template,\n          container: self.container\n        });\n        Ember['default'].run(function() {\n          self.view.appendTo('#ember-testing');\n        });\n      };\n\n      context.$ = function() {\n        return self.view.$.apply(self.view, arguments);\n      };\n\n      context.set = function(key, value) {\n        Ember['default'].run(function() {\n          Ember['default'].set(context, key, value);\n        });\n      };\n\n      context.get = function(key) {\n        return Ember['default'].get(context, key);\n      };\n\n      context.on = function(actionName, handler) {\n        self.actionHooks[actionName] = handler;\n      };\n\n    },\n\n    setupContext: function() {\n\n      test_context.setContext({\n        container:  this.container,\n        factory: function() {},\n        dispatcher: null\n      });\n\n      this.context = test_context.getContext();\n    },\n\n    send: function(actionName) {\n      var hook = this.actionHooks[actionName];\n      if (!hook) {\n        throw new Error(\"integration testing template received unexpected action \" + actionName);\n      }\n      hook.apply(this, Array.prototype.slice.call(arguments, 1));\n    },\n\n    teardownView: function() {\n      var view = this.view;\n      if (view) {\n        Ember['default'].run(function() {\n          view.destroy();\n        });\n      }\n    }\n\n  });\n\n});","define('ember-test-helpers/test-module-for-model', ['exports', 'ember-test-helpers/test-module', 'ember'], function (exports, TestModule, Ember) {\n\n  'use strict';\n\n  exports['default'] = TestModule['default'].extend({\n    init: function(modelName, description, callbacks) {\n      this.modelName = modelName;\n\n      this._super.call(this, 'model:' + modelName, description, callbacks);\n\n      this.setupSteps.push(this.setupModel);\n    },\n\n    setupModel: function() {\n      var container = this.container;\n      var defaultSubject = this.defaultSubject;\n      var callbacks = this.callbacks;\n      var modelName = this.modelName;\n\n      if (DS._setupContainer) {\n        DS._setupContainer(container);\n      } else {\n        container.register('store:main', DS.Store);\n      }\n\n      var adapterFactory = container.lookupFactory('adapter:application');\n      if (!adapterFactory) {\n        container.register('adapter:application', DS.FixtureAdapter);\n      }\n\n      callbacks.store = function(){\n        var container = this.container;\n\n        return container.lookup('store:main');\n      };\n\n      if (callbacks.subject === defaultSubject) {\n        callbacks.subject = function(options) {\n          var container = this.container;\n\n          return Ember['default'].run(function() {\n            return container.lookup('store:main').createRecord(modelName, options);\n          });\n        };\n      }\n    }\n  });\n\n});","define('ember-test-helpers/test-module', ['exports', 'ember', 'ember-test-helpers/isolated-container', 'ember-test-helpers/test-context', 'klassy', 'ember-test-helpers/test-resolver'], function (exports, Ember, isolatedContainer, test_context, klassy, test_resolver) {\n\n  'use strict';\n\n  exports['default'] = klassy.Klass.extend({\n    init: function(subjectName, description, callbacks) {\n      // Allow `description` to be omitted, in which case it should\n      // default to `subjectName`\n      if (!callbacks && typeof description === 'object') {\n        callbacks = description;\n        description = subjectName;\n      }\n\n      this.subjectName = subjectName;\n      this.description = description || subjectName;\n      this.name = description || subjectName;\n      this.callbacks = callbacks || {};\n\n      if (this.callbacks.integration) {\n        this.isIntegration = callbacks.integration;      \n        delete callbacks.integration;\n      }\n\n      this.initSubject();\n      this.initNeeds();\n      this.initSetupSteps();\n      this.initTeardownSteps();\n    },\n\n    initSubject: function() {\n      this.callbacks.subject = this.callbacks.subject || this.defaultSubject;\n    },\n\n    initNeeds: function() {\n      this.needs = [this.subjectName];\n      if (this.callbacks.needs) {\n        this.needs = this.needs.concat(this.callbacks.needs)\n        delete this.callbacks.needs;\n      }\n    },\n\n    initSetupSteps: function() {\n      this.setupSteps = [];\n      this.contextualizedSetupSteps = [];\n\n      if (this.callbacks.beforeSetup) {\n        this.setupSteps.push( this.callbacks.beforeSetup );\n        delete this.callbacks.beforeSetup;\n      }\n\n      this.setupSteps.push(this.setupContainer);\n      this.setupSteps.push(this.setupContext);\n      this.setupSteps.push(this.setupTestElements);\n\n      if (this.callbacks.setup) {\n        this.contextualizedSetupSteps.push( this.callbacks.setup );\n        delete this.callbacks.setup;\n      }\n    },\n\n    initTeardownSteps: function() {\n      this.teardownSteps = [];\n      this.contextualizedTeardownSteps = [];\n\n      if (this.callbacks.teardown) {\n        this.contextualizedTeardownSteps.push( this.callbacks.teardown );\n        delete this.callbacks.teardown;\n      }\n\n      this.teardownSteps.push(this.teardownSubject);\n      this.teardownSteps.push(this.teardownContainer);\n      this.teardownSteps.push(this.teardownContext);\n      this.teardownSteps.push(this.teardownTestElements);\n\n      if (this.callbacks.afterTeardown) {\n        this.teardownSteps.push( this.callbacks.afterTeardown );\n        delete this.callbacks.afterTeardown;\n      }\n    },\n\n    setup: function() {\n      var self = this;\n      return self.invokeSteps(self.setupSteps).then(function() {\n        self.contextualizeCallbacks();\n        return self.invokeSteps(self.contextualizedSetupSteps, self.context);\n      });\n    },\n\n    teardown: function() {\n      var self = this;\n      return self.invokeSteps(self.contextualizedTeardownSteps, self.context).then(function() {\n        return self.invokeSteps(self.teardownSteps);\n      }).then(function() {\n        self.cache = null;\n        self.cachedCalls = null;\n      });\n    },\n\n    invokeSteps: function(steps, _context) {\n      var context = _context;\n      if (!context) {\n        context = this;\n      }\n      steps = steps.slice();\n      function nextStep() {\n        var step = steps.shift();\n        if (step) {\n          return Ember['default'].RSVP.resolve(step.call(context)).then(nextStep);\n        } else {\n          return Ember['default'].RSVP.resolve();\n        }\n      }\n      return nextStep();\n    },\n\n    setupContainer: function() {\n      if (this.isIntegration) {\n        this._setupIntegratedContainer();\n      } else {\n        this._setupIsolatedContainer();\n      }\n    },\n\n    setupContext: function() {\n      var subjectName = this.subjectName;\n      var container = this.container;\n\n      var factory = function() {\n        return container.lookupFactory(subjectName);\n      };\n\n      test_context.setContext({\n        container:  this.container,\n        factory:    factory,\n        dispatcher: null\n      });\n\n      this.context = test_context.getContext();\n    },\n\n    setupTestElements: function() {\n      if (Ember['default'].$('#ember-testing').length === 0) {\n        Ember['default'].$('<div id=\"ember-testing\"/>').appendTo(document.body);\n      }\n    },\n\n    teardownSubject: function() {\n      var subject = this.cache.subject;\n\n      if (subject) {\n        Ember['default'].run(function() {\n          Ember['default'].tryInvoke(subject, 'destroy');\n        });\n      }\n    },\n\n    teardownContainer: function() {\n      var container = this.container;\n      Ember['default'].run(function() {\n        container.destroy();\n      });\n    },\n\n    teardownContext: function() {\n      var context = this.context;\n      if (context.dispatcher) {\n        Ember['default'].run(function() {\n          context.dispatcher.destroy();\n        });\n      }\n    },\n\n    teardownTestElements: function() {\n      Ember['default'].$('#ember-testing').empty();\n      Ember['default'].View.views = {};\n    },\n\n    defaultSubject: function(options, factory) {\n      return factory.create(options);\n    },\n\n    // allow arbitrary named factories, like rspec let\n    contextualizeCallbacks: function() {\n      var _this     = this;\n      var callbacks = this.callbacks;\n      var context   = this.context;\n      var factory   = context.factory;\n\n      this.cache = this.cache || {};\n      this.cachedCalls = this.cachedCalls || {};\n\n      var keys = Ember['default'].keys(callbacks);\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        (function(key) {\n\n          context[key] = function(options) {\n            if (_this.cachedCalls[key]) { return _this.cache[key]; }\n\n            var result = callbacks[key].call(_this, options, factory());\n\n            _this.cache[key] = result;\n            _this.cachedCalls[key] = true;\n\n            return result;\n          };\n\n        })(keys[i]);\n      }\n    },\n\n\n    _setupIsolatedContainer: function() {\n      this.container = isolatedContainer['default'](this.needs);\n    },\n\n    _setupIntegratedContainer: function() {\n      var resolver = test_resolver.getResolver();\n      var namespace = Ember['default'].Object.create({\n        Resolver: { create: function() { return resolver; } }\n      });\n\n      if (Ember['default'].Application.buildRegistry) {\n        var registry;\n        registry = Ember['default'].Application.buildRegistry(namespace);\n        registry.register('component-lookup:main', Ember['default'].ComponentLookup);\n        this.registry = registry;\n        this.container = registry.container();\n      } else {\n        this.container = Ember['default'].Application.buildContainer(namespace);\n        this.container.register('component-lookup:main', Ember['default'].ComponentLookup);\n      }\n    }\n\n  });\n\n});","define('ember-test-helpers/test-resolver', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.setResolver = setResolver;\n  exports.getResolver = getResolver;\n\n  var __resolver__;\n\n  function setResolver(resolver) {\n    __resolver__ = resolver;\n  }\n\n  function getResolver() {\n    if (__resolver__ == null) throw new Error('you must set a resolver with `testResolver.set(resolver)`');\n    return __resolver__;\n  }\n\n});","define('klassy', ['exports'], function (exports) {\n\n  'use strict';\n\n  /**\n   Extend a class with the properties and methods of one or more other classes.\n\n   When a method is replaced with another method, it will be wrapped in a\n   function that makes the replaced method accessible via `this._super`.\n\n   @method extendClass\n   @param {Object} destination The class to merge into\n   @param {Object} source One or more source classes\n   */\n  var extendClass = function(destination) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n    var source;\n\n    for (var i = 0, l = sources.length; i < l; i++) {\n      source = sources[i];\n\n      for (var p in source) {\n        if (source.hasOwnProperty(p) &&\n          destination[p] &&\n          typeof destination[p] === 'function' &&\n          typeof source[p] === 'function') {\n\n          /* jshint loopfunc:true */\n          destination[p] =\n            (function(destinationFn, sourceFn) {\n              var wrapper = function() {\n                var prevSuper = this._super;\n                this._super = destinationFn;\n\n                var ret = sourceFn.apply(this, arguments);\n\n                this._super = prevSuper;\n\n                return ret;\n              };\n              wrapper.wrappedFunction = sourceFn;\n              return wrapper;\n            })(destination[p], source[p]);\n\n        } else {\n          destination[p] = source[p];\n        }\n      }\n    }\n  };\n\n  // `subclassing` is a state flag used by `defineClass` to track when a class is\n  // being subclassed. It allows constructors to avoid calling `init`, which can\n  // be expensive and cause undesirable side effects.\n  var subclassing = false;\n\n  /**\n   Define a new class with the properties and methods of one or more other classes.\n\n   The new class can be based on a `SuperClass`, which will be inserted into its\n   prototype chain.\n\n   Furthermore, one or more mixins (object that contain properties and/or methods)\n   may be specified, which will be applied in order. When a method is replaced\n   with another method, it will be wrapped in a function that makes the previous\n   method accessible via `this._super`.\n\n   @method defineClass\n   @param {Object} SuperClass A base class to extend. If `mixins` are to be included\n   without a `SuperClass`, pass `null` for SuperClass.\n   @param {Object} mixins One or more objects that contain properties and methods\n   to apply to the new class.\n   */\n  var defineClass = function(SuperClass) {\n    var Klass = function() {\n      if (!subclassing && this.init) {\n        this.init.apply(this, arguments);\n      }\n    };\n\n    if (SuperClass) {\n      subclassing = true;\n      Klass.prototype = new SuperClass();\n      subclassing = false;\n    }\n\n    if (arguments.length > 1) {\n      var extendArgs = Array.prototype.slice.call(arguments, 1);\n      extendArgs.unshift(Klass.prototype);\n      extendClass.apply(Klass.prototype, extendArgs);\n    }\n\n    Klass.constructor = Klass;\n\n    Klass.extend = function() {\n      var args = Array.prototype.slice.call(arguments, 0);\n      args.unshift(Klass);\n      return defineClass.apply(Klass, args);\n    };\n\n    return Klass;\n  };\n\n  /**\n   A base class that can be extended.\n\n   @example\n\n   ```javascript\n   var CelestialObject = Klass.extend({\n     init: function(name) {\n       this._super();\n       this.name = name;\n       this.isCelestialObject = true;\n     },\n     greeting: function() {\n       return 'Hello from ' + this.name;\n     }\n   });\n\n   var Planet = CelestialObject.extend({\n     init: function(name) {\n       this._super.apply(this, arguments);\n       this.isPlanet = true;\n     },\n     greeting: function() {\n       return this._super() + '!';\n     },\n   });\n\n   var earth = new Planet('Earth');\n\n   console.log(earth instanceof Klass);           // true\n   console.log(earth instanceof CelestialObject); // true\n   console.log(earth instanceof Planet);          // true\n\n   console.log(earth.isCelestialObject);          // true\n   console.log(earth.isPlanet);                   // true\n\n   console.log(earth.greeting());                 // 'Hello from Earth!'\n   ```\n\n   @class Klass\n   */\n  var Klass = defineClass(null, {\n    init: function() {}\n  });\n\n  exports.Klass = Klass;\n  exports.defineClass = defineClass;\n  exports.extendClass = extendClass;\n\n});","define('mocha', ['exports'], function (exports) {\n\n  'use strict';\n\n  /* globals mocha, describe, it */\n\n  exports.mocha = mocha;\n  exports.describe = describe;\n  exports.it = it;\n  exports.before = before;\n  exports.beforeEach = beforeEach;\n  exports.after = after;\n  exports.afterEach = afterEach;\n\n});","define('mocha.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('mocha.js should pass jshint', function() { \n    ok(false, 'mocha.js should pass jshint.\\nmocha.js: line 4, col 3, \\'mocha\\' is not defined.\\nmocha.js: line 5, col 3, \\'describe\\' is not defined.\\nmocha.js: line 6, col 3, \\'it\\' is not defined.\\nmocha.js: line 7, col 3, \\'before\\' is not defined.\\nmocha.js: line 8, col 3, \\'beforeEach\\' is not defined.\\nmocha.js: line 9, col 3, \\'after\\' is not defined.\\nmocha.js: line 10, col 3, \\'afterEach\\' is not defined.\\n\\n7 errors'); \n  });\n\n});","define('tests/describe-component-test', ['ember', 'ember-mocha', 'tests/test-support/resolver', 'tests/test-support/mocha-support', 'mocha', 'chai'], function (Ember, ember_mocha, resolver, mocha_support, mocha, chai) {\n\n  'use strict';\n\n  var PrettyColor = Ember['default'].Component.extend({\n    classNames: ['pretty-color'],\n    attributeBindings: ['style'],\n    style: function(){\n      return 'color: ' + this.get('name') + ';';\n    }.property('name')\n  });\n\n  function setupRegistry() {\n    resolver.setResolverRegistry({\n      'component:x-foo': Ember['default'].Component.extend(),\n      'component:pretty-color': PrettyColor,\n      'template:components/pretty-color': Ember['default'].Handlebars.compile('Pretty Color: <span class=\"color-name\">{{name}}</span>')\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////\n\n  mocha.describe('describeComponent', function() {\n\n    ember_mocha.describeComponent('x-foo', {\n\n      beforeSetup: function() {\n        setupRegistry();\n      }\n\n    }, function() {\n\n      ember_mocha.it('renders', function() {\n        var component = this.subject();\n        chai.expect(component._state).to.equal('preRender');\n        this.render();\n        chai.expect(component._state).to.equal('inDOM');\n      });\n\n      ember_mocha.it('appends', function() {\n        var component = this.subject();\n        chai.expect(component._state).to.equal('preRender');\n        this.append();\n        chai.expect(component._state).to.equal('inDOM');\n      });\n\n      ember_mocha.it('yields', function() {\n        var component = this.subject({\n          layout: Ember['default'].Handlebars.compile(\"yield me\")\n        });\n        chai.expect(component._state).to.equal('preRender');\n        this.render();\n        chai.expect(component._state).to.equal('inDOM');\n      });\n\n      ember_mocha.it('can lookup components in its layout', function() {\n        var component = this.subject({\n          layout: Ember['default'].Handlebars.compile(\"{{x-foo id='yodawg-i-heard-you-liked-x-foo-in-ur-x-foo'}}\")\n        });\n        this.render();\n        chai.expect(component._state).to.equal('inDOM');\n      });\n\n      ember_mocha.it('clears out views from test to test', function() {\n        this.subject({\n          layout: Ember['default'].Handlebars.compile(\"{{x-foo id='yodawg-i-heard-you-liked-x-foo-in-ur-x-foo'}}\")\n        });\n        this.render();\n        chai.expect(true).to.equal(true); // rendered without id already being used from another test\n      });\n    });\n\n\n    ///////////////////////////////////////////////////////////////////////////////\n\n    ember_mocha.describeComponent('pretty-color', {\n\n      beforeSetup: function() {\n        setupRegistry();\n      }\n\n    }, function() {\n\n      ember_mocha.it(\"has the correct className\", function() {\n        // first call to this.$() renders the component.\n        chai.expect(this.$().is('.pretty-color')).to.be.true;\n      });\n\n      ember_mocha.it(\"uses the correct custom template\", function() {\n        var component = this.subject();\n\n        chai.expect($.trim(this.$().text())).to.equal('Pretty Color:');\n\n        Ember['default'].run(function() {\n          component.set('name', 'green');\n        });\n\n        chai.expect($.trim(this.$().text())).to.equal('Pretty Color: green');\n      });\n\n      ember_mocha.it(\"$\", function() {\n        var component = this.subject({name: 'green'});\n        chai.expect($.trim(this.$('.color-name').text())).to.equal('green');\n        chai.expect($.trim(this.$().text())).to.equal('Pretty Color: green');\n      });\n    });\n\n    ember_mocha.describeComponent.skip('skipped component', function() {\n      ember_mocha.it(\"is skipped\", function() {});\n    });\n    var grep = mocha_support.grepFor(function() {\n      ember_mocha.describeComponent.only('only component', function() {\n        ember_mocha.it(\"is the only spec\");\n      });\n    });\n\n    mocha.describe(\"skipping and grepping\", function() {\n      ember_mocha.it(\"skips the skipped context\", function() {\n        var skipped = window.mocha.suite.suites.find(function(suite) {\n          return suite.title === \"skipped component\" && suite.pending;\n        });\n      });\n      ember_mocha.it(\"greps for describeComponent.only\", function() {\n        chai.expect('describeComponent component:only component').to.match(grep);\n      });\n    });\n  });\n\n});","define('tests/describe-component-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests');\n  test('tests/describe-component-test.js should pass jshint', function() { \n    ok(true, 'tests/describe-component-test.js should pass jshint.'); \n  });\n\n});","define('tests/describe-model-test', ['ember', 'ember-mocha', 'tests/test-support/resolver', 'tests/test-support/mocha-support', 'mocha', 'chai'], function (Ember, ember_mocha, resolver, mocha_support, mocha, chai) {\n\n  'use strict';\n\n  var Whazzit = DS.Model.extend({ gear: DS.attr('string') });\n  var whazzitAdapterFindAllCalled = false;\n  var WhazzitAdapter = DS.FixtureAdapter.extend({\n    findAll: function(store, type) {\n      whazzitAdapterFindAllCalled = true;\n      return this._super.apply(this, arguments);\n    }\n  });\n\n  var ApplicationAdapter = DS.FixtureAdapter.extend();\n\n  function setupRegistry() {\n    resolver.setResolverRegistry({\n      'model:whazzit': Whazzit,\n      'adapter:whazzit': WhazzitAdapter,\n      'adapter:application': ApplicationAdapter\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////////\n\n  mocha.describe('describeModel', function() {\n\n    ember_mocha.describeModel('whazzit', 'model:whazzit without adapter', {\n\n      beforeSetup: function() {\n        setupRegistry();\n      },\n\n      setup: function() {\n        Whazzit.FIXTURES = [];\n      }\n\n    }, function() {\n\n      ember_mocha.it('store exists', function() {\n        var store = this.store();\n        chai.expect(store).to.be.an.instanceof(DS.Store);\n      });\n\n      ember_mocha.it('model exists as subject', function() {\n        var model = this.subject();\n        chai.expect(model).to.exist;\n        chai.expect(model).to.be.an.instanceof(DS.Model);\n        chai.expect(model).to.be.an.instanceof(Whazzit);\n      });\n\n      ember_mocha.it('model is using the FixtureAdapter', function() {\n        var model = this.subject(),\n            store = this.store();\n\n        chai.expect(store.adapterFor(model.constructor)).to.be.an.instanceof(DS.FixtureAdapter);\n        chai.expect(store.adapterFor(model.constructor)).to.not.be.an.instanceof(WhazzitAdapter);\n      });\n    });\n\n    ///////////////////////////////////////////////////////////////////////////////\n\n    ember_mocha.describeModel('whazzit', 'model:whazzit with custom adapter', {\n\n      needs: ['adapter:whazzit'],\n\n      beforeSetup: function() {\n        setupRegistry();\n      },\n\n      setup: function() {\n        Whazzit.FIXTURES = [];\n        whazzitAdapterFindAllCalled = false;\n      }\n\n    }, function() {\n\n      ember_mocha.it('uses the WhazzitAdapter', function() {\n        var model = this.subject(),\n            store = this.store();\n\n        chai.expect(store.adapterFor(model.constructor)).to.be.an.instanceof(WhazzitAdapter);\n      });\n\n      ember_mocha.it('uses the WhazzitAdapter for a `find` request', function(done) {\n        var model = this.subject(),\n            store = this.store();\n\n        chai.expect(whazzitAdapterFindAllCalled).to.be.false;\n\n        store = this.store();\n\n        return Ember['default'].run(function() {\n          return store.find('whazzit').then(function() {\n            chai.expect(whazzitAdapterFindAllCalled).to.be.true;\n            done();\n          });\n        });\n      });\n\n    });\n\n    ///////////////////////////////////////////////////////////////////////////////\n\n    ember_mocha.describeModel('whazzit', 'model:whazzit with application adapter', {\n\n      needs: ['adapter:application'],\n\n      beforeSetup: function() {\n        setupRegistry();\n      },\n\n      setup: function() {\n        Whazzit.FIXTURES = [];\n      }\n\n    }, function() {\n\n      ember_mocha.it('uses the ApplicationAdapter', function() {\n        var model = this.subject(),\n            store = this.store();\n\n        chai.expect(store.adapterFor(model.constructor)).to.be.an.instanceof(ApplicationAdapter);\n        chai.expect(store.adapterFor(model.constructor)).to.not.be.an.instanceof(WhazzitAdapter);\n      });\n\n    });\n\n\n    ember_mocha.describeModel.skip(\"skipped model\", function() {\n      ember_mocha.it(\"is skipped\", function() {});\n    });\n\n    var grep = mocha_support.grepFor(function() {\n      ember_mocha.describeModel.only(\"whazzit\", \"only model\", function() {\n        ember_mocha.it(\"is the only model\", function() {});\n      });\n    });\n\n    mocha.describe(\"skipping and grepping\", function() {\n      ember_mocha.it(\"skips the skipped context\", function() {\n        var skipped = window.mocha.suite.suites.find(function(suite) {\n          return suite.title === \"skipped model\" && suite.pending;\n        });\n      });\n      ember_mocha.it(\"greps for describeModel.only\", function() {\n        chai.expect('describeModel only model').to.match(grep);\n      });\n    });\n  });\n\n});","define('tests/describe-model-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests');\n  test('tests/describe-model-test.js should pass jshint', function() { \n    ok(true, 'tests/describe-model-test.js should pass jshint.'); \n  });\n\n});","define('tests/describe-module-test', ['ember-mocha', 'tests/test-support/resolver', 'tests/test-support/mocha-support', 'mocha', 'chai'], function (ember_mocha, resolver, mocha_support, mocha, chai) {\n\n  'use strict';\n\n  function setupRegistry() {\n    resolver.setResolverRegistry({\n      'component:x-foo': Ember.Component.extend()\n    });\n  }\n\n  var callbackOrder, setupContext, teardownContext, beforeSetupContext, afterTeardownContext;\n\n  mocha.describe(\"describeModule\", function() {\n\n    ember_mocha.describeModule('component:x-foo', 'TestModule callbacks', {\n      beforeSetup: function() {\n        beforeSetupContext = this;\n        callbackOrder = [ 'beforeSetup' ];\n\n        setupRegistry();\n      },\n\n      setup: function() {\n        setupContext = this;\n        callbackOrder.push('setup');\n\n        chai.expect(setupContext).to.not.equal(beforeSetupContext);\n      },\n\n      teardown: function() {\n        teardownContext = this;\n        callbackOrder.push('teardown');\n\n        chai.expect(callbackOrder).to.deep.equal([ 'beforeSetup', 'setup', 'teardown']);\n        chai.expect(setupContext).to.equal(teardownContext);\n      },\n\n      afterTeardown: function() {\n        afterTeardownContext = this;\n        callbackOrder.push('afterTeardown');\n\n        chai.expect(callbackOrder).to.deep.equal([ 'beforeSetup', 'setup', 'teardown', 'afterTeardown']);\n        chai.expect(afterTeardownContext).to.equal(beforeSetupContext);\n        chai.expect(afterTeardownContext).to.not.equal(teardownContext);\n      }\n\n    }, function() {\n      ember_mocha.it(\"should call setup callbacks in the correct order\", function() {\n        chai.expect(callbackOrder).to.deep.equal([ 'beforeSetup', 'setup' ]);\n      });\n    });\n\n    ember_mocha.describeModule.skip(\"skipped module\", function() {\n      ember_mocha.it(\"is skipped\", function() {});\n    });\n\n    var grep = mocha_support.grepFor(function() {\n      ember_mocha.describeModule.only(\"component:x-foo\", \"only module\", function() {\n        ember_mocha.it(\"is the only module\", function() {});\n      });\n    });\n\n    mocha.describe(\"skipping and grepping\", function() {\n      ember_mocha.it(\"skips the skipped context\", function() {\n        var skipped = window.mocha.suite.suites.find(function(suite) {\n          return suite.title === \"skipped module\" && suite.pending;\n        });\n      });\n      ember_mocha.it(\"greps for describeModule.only\", function() {\n        chai.expect('describeModule only module').to.match(grep);\n      });\n    });\n  });\n\n});","define('tests/describe-module-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests');\n  test('tests/describe-module-test.js should pass jshint', function() { \n    ok(true, 'tests/describe-module-test.js should pass jshint.'); \n  });\n\n});","define('tests/it-test', ['ember', 'ember-mocha', 'tests/test-support/mocha-support', 'mocha', 'chai'], function (Ember, ember_mocha, mocha_support, mocha, chai) {\n\n  'use strict';\n\n  function tryMochaSpecifier(fn) {\n    try {\n      fn();\n      return null;\n    } catch (e) {\n      return e;\n    }\n  }\n\n  var Mocha = window.mocha;\n\n  ///////////////////////////////////////////////////////////////////////////////\n\n  mocha.describe('it', function() {\n    ember_mocha.it('works with synchronous tests', function() {\n      chai.expect(true).to.equal(true);\n    });\n\n    ember_mocha.it('works with asynchronous tests using callbacks', function(done) {\n      setTimeout(function() {\n        chai.expect(true).to.equal(true);\n        done();\n      }, 10);\n    });\n\n    ember_mocha.it('works with asynchronous tests using promises', function() {\n      return new Ember['default'].RSVP.Promise(function(resolve) {\n        setTimeout(function() {\n          chai.expect(true).to.equal(true);\n          resolve();\n        }, 10);\n      });\n    });\n\n    var pendingError = tryMochaSpecifier(function() {\n      ember_mocha.it('is a pending spec');\n    });\n\n    ember_mocha.it('does not throw errors when you mark a pending spec', function() {\n      chai.expect(pendingError).to.be.null;\n      var pendingSpec = window.mocha.suite.suites.find(function(suite) {\n        return suite.tests.find(function(test) {\n          return test.title === 'is a pending spec';\n        });\n      });\n      chai.expect(pendingSpec).to.be.ok;\n    });\n\n\n    ember_mocha.it('correctly sets mocha grep options for runing a single test case with.only', function() {\n      chai.expect(mochaGrep).to.match(/it runs this test/);\n    });\n\n    var mochaGrep = mocha_support.grepFor(function() {\n      ember_mocha.it.only('runs this test');\n    });\n\n    var skippedError = tryMochaSpecifier(function() {\n      ember_mocha.it.skip('is a skipped spec');\n    });\n\n    ember_mocha.it('skips tests with the .skip modifier', function() {\n      chai.expect(skippedError).to.be.null;\n      var pendingSpec = Mocha.suite.suites.find(function(suite) {\n        return suite.tests.find(function(test) {\n          return test.title === 'is a skipped spec';\n        });\n      });\n      chai.expect(pendingSpec).to.exist;\n    });\n\n    var callback = function() {\n      chai.expect(callback.toString()).to.equal(wrapper.fn.toString());\n    };\n\n    var wrapper = ember_mocha.it('testing test report string representation', callback);\n\n  });\n\n});","define('tests/it-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests');\n  test('tests/it-test.js should pass jshint', function() { \n    ok(true, 'tests/it-test.js should pass jshint.'); \n  });\n\n});","define('tests/mocha-module-test', ['ember-mocha/mocha-module', 'ember-test-helpers', 'mocha', 'chai'], function (mocha_module, ember_test_helpers, mocha, chai) {\n\n  'use strict';\n\n  mocha.describe('MochaModule', function() {\n    mocha_module.createModule(ember_test_helpers.TestModule, 'component:x-foo', 'context', function() {\n      var thisInBefore, thisInBeforeEach;\n\n      mocha.before(function() {\n        thisInBefore = this;\n      });\n      mocha.beforeEach(function() {\n        thisInBeforeEach = this;\n      });\n      mocha.it(\"is preserved inside all assertions and hooks\", function() {\n        chai.expect(this).to.be.defined;\n        chai.expect(this).to.equal(thisInBefore);\n        chai.expect(this).to.equal(thisInBeforeEach);\n      });\n      mocha.afterEach(function() {\n        chai.expect(this).to.equal(thisInBeforeEach);\n      });\n      mocha.after(function() {\n        chai.expect(this).to.equal(thisInBefore);\n        chai.expect(this).to.equal(thisInBeforeEach);\n      });\n    });\n  });\n\n});","define('tests/mocha-module-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests');\n  test('tests/mocha-module-test.js should pass jshint', function() { \n    ok(true, 'tests/mocha-module-test.js should pass jshint.'); \n  });\n\n});","define('tests/shims-test', ['mocha', 'chai'], function (mocha, chai) {\n\n  'use strict';\n\n  mocha.describe('mocha-shim', function() {\n    mocha.it('should work', function() {\n      window.chai.expect(mocha.mocha).to.equal(window.mocha);\n      window.chai.expect(mocha.describe).to.equal(window.describe);\n      window.chai.expect(mocha.it).to.equal(window.it);\n      window.chai.expect(mocha.before).to.equal(window.before);\n      window.chai.expect(mocha.after).to.equal(window.after);\n      window.chai.expect(mocha.beforeEach).to.equal(window.beforeEach);\n      window.chai.expect(mocha.afterEach).to.equal(window.afterEach);\n    });\n  });\n\n  mocha.describe('chai-shim', function() {\n    mocha.it('should work', function() {\n      window.chai.expect(chai.expect).to.equal(window.chai.expect);\n      window.chai.expect(chai.assert).to.equal(window.chai.assert);\n    });\n  });\n\n});","define('tests/shims-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests');\n  test('tests/shims-test.js should pass jshint', function() { \n    ok(true, 'tests/shims-test.js should pass jshint.'); \n  });\n\n});","define('tests/test-support/mocha-support', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports.grepFor = grepFor;\n\n  /**\n   * Captures mocha grep options for a. That way you can run describe\n   * block or an `it` block that may narrow the mocha test run, but\n   * those options will be reset afterwards. E.g.\n   *\n   *   var grep = grepFor(function() {\n   *     it.skip('this is skipped');\n   *   })\n   *   console.log(grep) //=> /this is skipped/\n  */\n  function grepFor(fn) {\n    var options = window.mocha.options;\n    var originalMochaGrep = options.grep;\n    try {\n      fn();\n      return options.grep;\n    } finally {\n      options.grep = originalMochaGrep;\n    }\n  }\n\n});","define('tests/test-support/mocha-support.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests/test-support');\n  test('tests/test-support/mocha-support.js should pass jshint', function() { \n    ok(true, 'tests/test-support/mocha-support.js should pass jshint.'); \n  });\n\n});","define('tests/test-support/resolver', ['exports', 'ember-test-helpers'], function (exports, ember_test_helpers) {\n\n  'use strict';\n\n  exports.setResolverRegistry = setResolverRegistry;\n\n  var Resolver = Ember.DefaultResolver.extend({\n    registry: null,\n\n    resolve: function(fullName) {\n      return this.registry[fullName] || this._super.apply(this, arguments);\n    },\n\n    normalize: function(fullName) {\n      return Ember.String.dasherize(fullName);\n    }\n  });\n\n  var resolver = Resolver.create({registry: {}});\n  ember_test_helpers.setResolver(resolver);\n\n  function setResolverRegistry(registry) {\n    resolver.set('registry', registry);\n  }\n\n});","define('tests/test-support/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests/test-support');\n  test('tests/test-support/resolver.js should pass jshint', function() { \n    ok(true, 'tests/test-support/resolver.js should pass jshint.'); \n  });\n\n});","define('tests/test-support/test-loader', function () {\n\n  'use strict';\n\n  /* globals requirejs, require */\n\n  var TestLoader = function() {\n  };\n\n  TestLoader.prototype = {\n    shouldLoadModule: function(moduleName) {\n      return (moduleName.match(/[-_]test$/));\n    },\n\n    loadModules: function() {\n      var moduleName;\n\n      for (moduleName in requirejs.entries) {\n        if (this.shouldLoadModule(moduleName)) {\n          require(moduleName);\n        }\n      }\n    }\n  };\n\n  TestLoader.load = function() {\n    new TestLoader().loadModules();\n  };\n\n  //export default TestLoader;\n  TestLoader.load();\n\n});","define('tests/test-support/test-loader.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - tests/test-support');\n  test('tests/test-support/test-loader.js should pass jshint', function() { \n    ok(true, 'tests/test-support/test-loader.js should pass jshint.'); \n  });\n\n});"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxjvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-mocha-tests.amd.js"}